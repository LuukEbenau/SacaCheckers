<UserControl x:Name="uctile" x:Class="Dammen.UC.UCTile"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Dammen.UC"
             xmlns:UC="clr-namespace:Dammen.UC"
             mc:Ignorable="d"
             d:DesignHeight="50" d:DesignWidth="50">
    <UserControl.Resources>
        <Style x:Key="attackIconOnAttack" TargetType="Image">
            <Style.Triggers>
                <!--History highlighting-->

                <!--This line will show a icon on the tile you can walk to, i don't really like the looks of it atm though.-->
                <!--<DataTrigger Binding="{Binding TileStatus, ElementName=uctile}" Value="Move">
                    <Setter Property="Source" Value="{StaticResource walkMoveIcon}" />
                </DataTrigger>-->
                <DataTrigger Binding="{Binding TileStatus, ElementName=uctile}" Value="AttackedTile">
                    <Setter Property="Source" Value="{StaticResource attackMoveIconGreen}" />
                </DataTrigger>

                <DataTrigger Binding="{Binding PreviewTileStatus, ElementName=uctile}" Value="AttackedTile">
                    <Setter Property="Source" Value="{StaticResource attackMoveIconGreen}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="HighlightOnTileStatus" TargetType="{x:Type Border}">
            <Style.Triggers>
                <!-- Turn highlighting-->
                <DataTrigger Binding="{Binding TileStatus , ElementName=uctile}" Value="PossibleMove">
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect BlurRadius="20" ShadowDepth="0"  Color="GreenYellow" />
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="BorderBrush" Value="GreenYellow" />
                </DataTrigger>

                <DataTrigger Binding="{Binding TileStatus , ElementName=uctile}" Value="Move">
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect BlurRadius="20" ShadowDepth="0"  Color="DeepSkyBlue" />
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderThickness" Value="2" />
                    <Setter Property="BorderBrush" Value="CornflowerBlue" />
                </DataTrigger>
                <DataTrigger Binding="{Binding TileStatus , ElementName=uctile}" Value="Attackable">
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect BlurRadius="20" ShadowDepth="0"  Color="OrangeRed" />
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderThickness" Value="2" />
                    <Setter Property="BorderBrush" Value="OrangeRed" />
                </DataTrigger>

                <!--For highlighting on history hover-->
                <DataTrigger Binding="{Binding PreviewTileStatus , ElementName=uctile}" Value="MoveStartLocation">
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect BlurRadius="20" ShadowDepth="0"  Color="GreenYellow" />
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="BorderBrush" Value="GreenYellow" />
                </DataTrigger>

                <DataTrigger Binding="{Binding PreviewTileStatus , ElementName=uctile}" Value="Move">
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect BlurRadius="20" ShadowDepth="0"  Color="DeepSkyBlue" />
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderThickness" Value="2" />
                    <Setter Property="BorderBrush" Value="CornflowerBlue" />
                </DataTrigger>
                <DataTrigger Binding="{Binding PreviewTileStatus , ElementName=uctile}" Value="Attackable">
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect BlurRadius="20" ShadowDepth="0"  Color="OrangeRed" />
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderThickness" Value="2" />
                    <Setter Property="BorderBrush" Value="OrangeRed" />
                </DataTrigger>

                <DataTrigger Binding="{Binding PreviewTileStatus , ElementName=uctile}" Value="MoveLocation">
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect BlurRadius="20" ShadowDepth="0"  Color="GreenYellow" />
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="BorderBrush" Value="GreenYellow" />
                </DataTrigger>

                <DataTrigger Binding="{Binding PreviewTileStatus , ElementName=uctile}" Value="InitialMoveStartLocation">
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect BlurRadius="20" ShadowDepth="0"  Color="Purple" />
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="BorderBrush" Value="Purple" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Border x:Name="tileBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding Tile.TileBrush,ElementName=uctile}" Style="{StaticResource HighlightOnTileStatus}" />
        <ContentControl x:Name="wrap"
           HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
           Grid.Column="{Binding Tile.Coordinate.X,ElementName=uctile}" Grid.Row="{Binding Tile.Coordinate.Y,ElementName=uctile}">
            <ContentControl.Content>
                <Grid>
                    <Viewbox StretchDirection="DownOnly" Stretch="Uniform" Margin="1">
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="18" Foreground="LightGray" Opacity="0.4" Text="{Binding Tile.Coordinate,ElementName=uctile}" />
                    </Viewbox>

                    <Image Panel.ZIndex="30" Visibility="Visible" Margin="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Opacity="0.6" Style="{StaticResource attackIconOnAttack}" />
                    <!--NOTE: wat voor performance nadelen heeft het om elke keer opnieuw een ui element aan te maken? kan evt. opgelost worden met een methode
                    waarmee alleen de checker geupdated word, en niet steeds een nieuwe instantie-->
                    <local:UCChecker HorizontalAlignment="Stretch" VerticalAlignment="Stretch" MouseLeftButtonDown="UCChecker_MouseDown" Checker="{Binding Tile.Checker,ElementName=uctile}" />
                </Grid>
            </ContentControl.Content>
        </ContentControl>
    </Grid>
</UserControl>